{"version":3,"sources":["scripts/main.js"],"names":["cellsList","Array","from","document","querySelectorAll","procesingOrder","ArrowRight","ArrowLeft","ArrowDown","ArrowUp","gameScore","querySelector","startBtn","messageWin","messageLose","messageStart","addRandom","freeCells","filter","cell","classList","length","newCellNumber","Math","floor","random","newCellVallue","writeToCell","ifMergable","remove","order","some","lineOrder","i","textContent","number","className","add","addEventListener","contains","replace","forEach","arrows","eventtt","key","find","arrow","ifMovement","prevContent","previndex","cellContent","Number"],"mappings":"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","file":"main.b1a52920.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst cellsList = Array.from(document.querySelectorAll('.field-cell'));\nconst procesingOrder = {\n  ArrowRight: [\n    [cellsList[0], cellsList[1], cellsList[2], cellsList[3]],\n    [cellsList[4], cellsList[5], cellsList[6], cellsList[7]],\n    [cellsList[8], cellsList[9], cellsList[10], cellsList[11]],\n    [cellsList[12], cellsList[13], cellsList[14], cellsList[15]],\n  ],\n  ArrowLeft: [\n    [cellsList[3], cellsList[2], cellsList[1], cellsList[0]],\n    [cellsList[7], cellsList[6], cellsList[5], cellsList[4]],\n    [cellsList[11], cellsList[10], cellsList[9], cellsList[8]],\n    [cellsList[15], cellsList[14], cellsList[13], cellsList[12]],\n  ],\n  ArrowDown: [\n    [cellsList[0], cellsList[4], cellsList[8], cellsList[12]],\n    [cellsList[1], cellsList[5], cellsList[9], cellsList[13]],\n    [cellsList[2], cellsList[6], cellsList[10], cellsList[14]],\n    [cellsList[3], cellsList[7], cellsList[11], cellsList[15]],\n  ],\n  ArrowUp: [\n    [cellsList[12], cellsList[8], cellsList[4], cellsList[0]],\n    [cellsList[13], cellsList[9], cellsList[5], cellsList[1]],\n    [cellsList[14], cellsList[10], cellsList[6], cellsList[2]],\n    [cellsList[15], cellsList[11], cellsList[7], cellsList[3]],\n  ],\n};\nconst gameScore = document.querySelector('.game-score');\nconst startBtn = document.querySelector('.start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\n\nstartBtn.addEventListener('click', () => {\n  if (startBtn.classList.contains('start')) {\n    messageStart.classList.add('hidden');\n    startBtn.classList.replace('start', 'restart');\n    startBtn.textContent = 'Restart';\n    addRandom();\n    addRandom();\n  } else {\n    messageStart.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    startBtn.classList.replace('restart', 'start');\n    cellsList.forEach((cell) => writeToCell(cell, 0));\n    startBtn.textContent = 'Start';\n    gameScore.textContent = 0;\n  }\n});\n\nfunction addRandom() {\n  const freeCells = cellsList.filter((cell) => cell.classList.length === 1);\n  const newCellNumber = Math.floor(Math.random() * freeCells.length);\n  let newCellVallue = 2;\n\n  if (Math.random() >= 0.9) {\n    newCellVallue = 4;\n  }\n\n  if (freeCells.length > 1) {\n    writeToCell(freeCells[newCellNumber], newCellVallue);\n  }\n\n  if (freeCells.length === 1) {\n    writeToCell(freeCells[newCellNumber], newCellVallue);\n\n    if (\n      !ifMergable(procesingOrder['ArrowRight'])\n      && !ifMergable(procesingOrder['ArrowDown'])\n    ) {\n      messageLose.classList.remove('hidden');\n    }\n  }\n}\n\nfunction ifMergable(order) {\n  return order.some((lineOrder) => {\n    for (let i = 0; i < 3; i++) {\n      if (lineOrder[i].textContent === lineOrder[i + 1].textContent) {\n        return true;\n      }\n    }\n  });\n}\n\nfunction writeToCell(cell, number) {\n  if (number === 0) {\n    cell.className = 'field-cell';\n    cell.textContent = '';\n  } else {\n    cell.className = 'field-cell';\n    cell.classList.add(`field-cell--${number}`);\n    cell.textContent = number;\n  }\n}\n\nconst arrows = ['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'];\n\ndocument.addEventListener('keydown', (eventtt) => {\n  const key = arrows.find((arrow) => arrow === eventtt.key);\n\n  if (key) {\n    const order = procesingOrder[key];\n    let ifMovement = false;\n\n    order.forEach((lineOrder) => {\n      for (let i = 3, prevContent = -1, previndex = 3; i >= 0; i--) {\n        let cellContent = lineOrder[i].textContent;\n\n        if (cellContent) {\n          if (cellContent === prevContent) {\n            writeToCell(lineOrder[previndex], prevContent * 2);\n            writeToCell(lineOrder[i], 0);\n            cellContent *= 2;\n            prevContent = -1;\n            i = previndex;\n            ifMovement = true;\n            gameScore.textContent = Number(gameScore.textContent) + cellContent;\n\n            if (cellContent === 2048) {\n              messageWin.classList.remove('hidden');\n            }\n          }\n\n          if (i !== previndex) {\n            if (lineOrder[previndex].textContent && i !== previndex - 1) {\n              writeToCell(lineOrder[previndex - 1], cellContent);\n              writeToCell(lineOrder[i], 0);\n              previndex = previndex - 1;\n              prevContent = cellContent;\n              ifMovement = true;\n            } else if (!lineOrder[previndex].textContent) {\n              writeToCell(lineOrder[previndex], cellContent);\n              writeToCell(lineOrder[i], 0);\n\n              prevContent = cellContent;\n              ifMovement = true;\n            } else {\n              prevContent = cellContent;\n              previndex = i;\n            }\n          } else {\n            prevContent = cellContent;\n          }\n        }\n      }\n    });\n\n    if (ifMovement) {\n      addRandom();\n    }\n  }\n});\n"]}